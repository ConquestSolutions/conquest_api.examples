// Code generated by go-swagger; DO NOT EDIT.

package geo_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ConquestSolutions/conquest_api.examples/go-swagger/models"
)

// GeoServiceAddGeoPackageReader is a Reader for the GeoServiceAddGeoPackage structure.
type GeoServiceAddGeoPackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GeoServiceAddGeoPackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGeoServiceAddGeoPackageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGeoServiceAddGeoPackageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGeoServiceAddGeoPackageOK creates a GeoServiceAddGeoPackageOK with default headers values
func NewGeoServiceAddGeoPackageOK() *GeoServiceAddGeoPackageOK {
	return &GeoServiceAddGeoPackageOK{}
}

/* GeoServiceAddGeoPackageOK describes a response with status code 200, with default header values.

A successful response.
*/
type GeoServiceAddGeoPackageOK struct {
	Payload string
}

func (o *GeoServiceAddGeoPackageOK) Error() string {
	return fmt.Sprintf("[POST /api/geo/add_geo_package][%d] geoServiceAddGeoPackageOK  %+v", 200, o.Payload)
}
func (o *GeoServiceAddGeoPackageOK) GetPayload() string {
	return o.Payload
}

func (o *GeoServiceAddGeoPackageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeoServiceAddGeoPackageDefault creates a GeoServiceAddGeoPackageDefault with default headers values
func NewGeoServiceAddGeoPackageDefault(code int) *GeoServiceAddGeoPackageDefault {
	return &GeoServiceAddGeoPackageDefault{
		_statusCode: code,
	}
}

/* GeoServiceAddGeoPackageDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type GeoServiceAddGeoPackageDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the geo service add geo package default response
func (o *GeoServiceAddGeoPackageDefault) Code() int {
	return o._statusCode
}

func (o *GeoServiceAddGeoPackageDefault) Error() string {
	return fmt.Sprintf("[POST /api/geo/add_geo_package][%d] GeoService_AddGeoPackage default  %+v", o._statusCode, o.Payload)
}
func (o *GeoServiceAddGeoPackageDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *GeoServiceAddGeoPackageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
