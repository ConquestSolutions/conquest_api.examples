// Code generated by go-swagger; DO NOT EDIT.

package knowledge_base_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new knowledge base service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for knowledge base service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	KnowledgeBaseServiceDescribeEnumeration(params *KnowledgeBaseServiceDescribeEnumerationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceDescribeEnumerationOK, error)

	KnowledgeBaseServiceGetAttributeSetFieldNames(params *KnowledgeBaseServiceGetAttributeSetFieldNamesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceGetAttributeSetFieldNamesOK, error)

	KnowledgeBaseServiceGetCodeLists(params *KnowledgeBaseServiceGetCodeListsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceGetCodeListsOK, error)

	KnowledgeBaseServiceListAttributeSets(params *KnowledgeBaseServiceListAttributeSetsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceListAttributeSetsOK, error)

	KnowledgeBaseServiceListStandardDefectResponses(params *KnowledgeBaseServiceListStandardDefectResponsesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceListStandardDefectResponsesOK, error)

	KnowledgeBaseServiceListViewFields(params *KnowledgeBaseServiceListViewFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceListViewFieldsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  KnowledgeBaseServiceDescribeEnumeration knowledge base service describe enumeration API
*/
func (a *Client) KnowledgeBaseServiceDescribeEnumeration(params *KnowledgeBaseServiceDescribeEnumerationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceDescribeEnumerationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewKnowledgeBaseServiceDescribeEnumerationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "KnowledgeBaseService_DescribeEnumeration",
		Method:             "POST",
		PathPattern:        "/api/knowledge_base/describe_enumeration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &KnowledgeBaseServiceDescribeEnumerationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*KnowledgeBaseServiceDescribeEnumerationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*KnowledgeBaseServiceDescribeEnumerationDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  KnowledgeBaseServiceGetAttributeSetFieldNames knowledge base service get attribute set field names API
*/
func (a *Client) KnowledgeBaseServiceGetAttributeSetFieldNames(params *KnowledgeBaseServiceGetAttributeSetFieldNamesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceGetAttributeSetFieldNamesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewKnowledgeBaseServiceGetAttributeSetFieldNamesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "KnowledgeBaseService_GetAttributeSetFieldNames",
		Method:             "POST",
		PathPattern:        "/api/knowledge_base/list_field_names_for_attribute_set",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &KnowledgeBaseServiceGetAttributeSetFieldNamesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*KnowledgeBaseServiceGetAttributeSetFieldNamesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*KnowledgeBaseServiceGetAttributeSetFieldNamesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  KnowledgeBaseServiceGetCodeLists knowledge base service get code lists API
*/
func (a *Client) KnowledgeBaseServiceGetCodeLists(params *KnowledgeBaseServiceGetCodeListsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceGetCodeListsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewKnowledgeBaseServiceGetCodeListsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "KnowledgeBaseService_GetCodeLists",
		Method:             "POST",
		PathPattern:        "/api/knowledge_base/list_code_lists",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &KnowledgeBaseServiceGetCodeListsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*KnowledgeBaseServiceGetCodeListsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*KnowledgeBaseServiceGetCodeListsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  KnowledgeBaseServiceListAttributeSets knowledge base service list attribute sets API
*/
func (a *Client) KnowledgeBaseServiceListAttributeSets(params *KnowledgeBaseServiceListAttributeSetsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceListAttributeSetsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewKnowledgeBaseServiceListAttributeSetsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "KnowledgeBaseService_ListAttributeSets",
		Method:             "POST",
		PathPattern:        "/api/knowledge_base/list_attribute_sets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &KnowledgeBaseServiceListAttributeSetsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*KnowledgeBaseServiceListAttributeSetsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*KnowledgeBaseServiceListAttributeSetsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  KnowledgeBaseServiceListStandardDefectResponses knowledge base service list standard defect responses API
*/
func (a *Client) KnowledgeBaseServiceListStandardDefectResponses(params *KnowledgeBaseServiceListStandardDefectResponsesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceListStandardDefectResponsesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewKnowledgeBaseServiceListStandardDefectResponsesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "KnowledgeBaseService_ListStandardDefectResponses",
		Method:             "POST",
		PathPattern:        "/api/knowledge_base/list_standard_defect_responses",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &KnowledgeBaseServiceListStandardDefectResponsesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*KnowledgeBaseServiceListStandardDefectResponsesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*KnowledgeBaseServiceListStandardDefectResponsesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  KnowledgeBaseServiceListViewFields knowledge base service list view fields API
*/
func (a *Client) KnowledgeBaseServiceListViewFields(params *KnowledgeBaseServiceListViewFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*KnowledgeBaseServiceListViewFieldsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewKnowledgeBaseServiceListViewFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "KnowledgeBaseService_ListViewFields",
		Method:             "POST",
		PathPattern:        "/api/knowledge_base/list_view_fields_for_context",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &KnowledgeBaseServiceListViewFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*KnowledgeBaseServiceListViewFieldsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*KnowledgeBaseServiceListViewFieldsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
