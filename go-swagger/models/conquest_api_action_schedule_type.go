// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPIActionScheduleType conquest api action schedule type
//
// swagger:model conquest_apiActionScheduleType
type ConquestAPIActionScheduleType string

func NewConquestAPIActionScheduleType(value ConquestAPIActionScheduleType) *ConquestAPIActionScheduleType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPIActionScheduleType.
func (m ConquestAPIActionScheduleType) Pointer() *ConquestAPIActionScheduleType {
	return &m
}

const (

	// ConquestAPIActionScheduleTypeActionScheduleTypeLimited captures enum value "ActionScheduleType_Limited"
	ConquestAPIActionScheduleTypeActionScheduleTypeLimited ConquestAPIActionScheduleType = "ActionScheduleType_Limited"

	// ConquestAPIActionScheduleTypeActionScheduleTypeUnlimitedFromStart captures enum value "ActionScheduleType_UnlimitedFromStart"
	ConquestAPIActionScheduleTypeActionScheduleTypeUnlimitedFromStart ConquestAPIActionScheduleType = "ActionScheduleType_UnlimitedFromStart"

	// ConquestAPIActionScheduleTypeActionScheduleTypeUnlimitedFromCompletion captures enum value "ActionScheduleType_UnlimitedFromCompletion"
	ConquestAPIActionScheduleTypeActionScheduleTypeUnlimitedFromCompletion ConquestAPIActionScheduleType = "ActionScheduleType_UnlimitedFromCompletion"
)

// for schema
var conquestApiActionScheduleTypeEnum []interface{}

func init() {
	var res []ConquestAPIActionScheduleType
	if err := json.Unmarshal([]byte(`["ActionScheduleType_Limited","ActionScheduleType_UnlimitedFromStart","ActionScheduleType_UnlimitedFromCompletion"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiActionScheduleTypeEnum = append(conquestApiActionScheduleTypeEnum, v)
	}
}

func (m ConquestAPIActionScheduleType) validateConquestAPIActionScheduleTypeEnum(path, location string, value ConquestAPIActionScheduleType) error {
	if err := validate.EnumCase(path, location, value, conquestApiActionScheduleTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api action schedule type
func (m ConquestAPIActionScheduleType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPIActionScheduleTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api action schedule type based on context it is used
func (m ConquestAPIActionScheduleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
