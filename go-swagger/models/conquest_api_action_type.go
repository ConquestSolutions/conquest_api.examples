// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPIActionType conquest api action type
//
// swagger:model conquest_apiActionType
type ConquestAPIActionType string

func NewConquestAPIActionType(value ConquestAPIActionType) *ConquestAPIActionType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPIActionType.
func (m ConquestAPIActionType) Pointer() *ConquestAPIActionType {
	return &m
}

const (

	// ConquestAPIActionTypeActionTypeUnscheduled captures enum value "ActionType_Unscheduled"
	ConquestAPIActionTypeActionTypeUnscheduled ConquestAPIActionType = "ActionType_Unscheduled"

	// ConquestAPIActionTypeActionTypeScheduled captures enum value "ActionType_Scheduled"
	ConquestAPIActionTypeActionTypeScheduled ConquestAPIActionType = "ActionType_Scheduled"

	// ConquestAPIActionTypeActionTypeCyclic captures enum value "ActionType_Cyclic"
	ConquestAPIActionTypeActionTypeCyclic ConquestAPIActionType = "ActionType_Cyclic"

	// ConquestAPIActionTypeActionTypeDisposal captures enum value "ActionType_Disposal"
	ConquestAPIActionTypeActionTypeDisposal ConquestAPIActionType = "ActionType_Disposal"

	// ConquestAPIActionTypeActionTypeLogBook captures enum value "ActionType_LogBook"
	ConquestAPIActionTypeActionTypeLogBook ConquestAPIActionType = "ActionType_LogBook"

	// ConquestAPIActionTypeActionTypeNewWorks captures enum value "ActionType_NewWorks"
	ConquestAPIActionTypeActionTypeNewWorks ConquestAPIActionType = "ActionType_NewWorks"

	// ConquestAPIActionTypeActionTypePurchase captures enum value "ActionType_Purchase"
	ConquestAPIActionTypeActionTypePurchase ConquestAPIActionType = "ActionType_Purchase"

	// ConquestAPIActionTypeActionTypeWarranty captures enum value "ActionType_Warranty"
	ConquestAPIActionTypeActionTypeWarranty ConquestAPIActionType = "ActionType_Warranty"

	// ConquestAPIActionTypeActionTypeLitigation captures enum value "ActionType_Litigation"
	ConquestAPIActionTypeActionTypeLitigation ConquestAPIActionType = "ActionType_Litigation"

	// ConquestAPIActionTypeActionTypePlanned captures enum value "ActionType_Planned"
	ConquestAPIActionTypeActionTypePlanned ConquestAPIActionType = "ActionType_Planned"

	// ConquestAPIActionTypeActionTypeProject captures enum value "ActionType_Project"
	ConquestAPIActionTypeActionTypeProject ConquestAPIActionType = "ActionType_Project"

	// ConquestAPIActionTypeActionTypeMaster captures enum value "ActionType_Master"
	ConquestAPIActionTypeActionTypeMaster ConquestAPIActionType = "ActionType_Master"

	// ConquestAPIActionTypeActionTypeUnknown captures enum value "ActionType_Unknown"
	ConquestAPIActionTypeActionTypeUnknown ConquestAPIActionType = "ActionType_Unknown"
)

// for schema
var conquestApiActionTypeEnum []interface{}

func init() {
	var res []ConquestAPIActionType
	if err := json.Unmarshal([]byte(`["ActionType_Unscheduled","ActionType_Scheduled","ActionType_Cyclic","ActionType_Disposal","ActionType_LogBook","ActionType_NewWorks","ActionType_Purchase","ActionType_Warranty","ActionType_Litigation","ActionType_Planned","ActionType_Project","ActionType_Master","ActionType_Unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiActionTypeEnum = append(conquestApiActionTypeEnum, v)
	}
}

func (m ConquestAPIActionType) validateConquestAPIActionTypeEnum(path, location string, value ConquestAPIActionType) error {
	if err := validate.EnumCase(path, location, value, conquestApiActionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api action type
func (m ConquestAPIActionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPIActionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api action type based on context it is used
func (m ConquestAPIActionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
