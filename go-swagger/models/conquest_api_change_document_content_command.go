// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConquestAPIChangeDocumentContentCommand conquest api change document content command
//
// swagger:model conquest_apiChangeDocumentContentCommand
type ConquestAPIChangeDocumentContentCommand struct {

	// See AddDocumentCommand.Address
	Address string `json:"Address,omitempty"`

	// ContentLength in bytes
	ContentLength string `json:"ContentLength,omitempty"`

	// content type
	ContentType string `json:"ContentType,omitempty"`

	// document description
	DocumentDescription string `json:"DocumentDescription,omitempty"`

	// document ID
	DocumentID int32 `json:"DocumentID,omitempty"`

	// A list of calculated hashes / checksum of the file to be uploaded.
	Hashes []string `json:"Hashes"`

	// link existing document
	LinkExistingDocument bool `json:"LinkExistingDocument,omitempty"`

	// object key
	ObjectKey *ConquestAPIObjectKey `json:"ObjectKey,omitempty"`

	// UpdateTime when provided by the device can be used as a key, because a DocumentID is not yet present.
	// Format: date-time
	UpdateTime strfmt.DateTime `json:"UpdateTime,omitempty"`
}

// Validate validates this conquest api change document content command
func (m *ConquestAPIChangeDocumentContentCommand) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObjectKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIChangeDocumentContentCommand) validateObjectKey(formats strfmt.Registry) error {
	if swag.IsZero(m.ObjectKey) { // not required
		return nil
	}

	if m.ObjectKey != nil {
		if err := m.ObjectKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ObjectKey")
			}
			return err
		}
	}

	return nil
}

func (m *ConquestAPIChangeDocumentContentCommand) validateUpdateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("UpdateTime", "body", "date-time", m.UpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this conquest api change document content command based on the context it is used
func (m *ConquestAPIChangeDocumentContentCommand) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateObjectKey(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIChangeDocumentContentCommand) contextValidateObjectKey(ctx context.Context, formats strfmt.Registry) error {

	if m.ObjectKey != nil {
		if err := m.ObjectKey.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ObjectKey")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIChangeDocumentContentCommand) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIChangeDocumentContentCommand) UnmarshalBinary(b []byte) error {
	var res ConquestAPIChangeDocumentContentCommand
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
