// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPIConditionType - ConditionType_WeightedAverage: Weighted Average (Default)
//  - ConditionType_ConditionDistribution: Condition Distribution (%)
//
// swagger:model conquest_apiConditionType
type ConquestAPIConditionType string

func NewConquestAPIConditionType(value ConquestAPIConditionType) *ConquestAPIConditionType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPIConditionType.
func (m ConquestAPIConditionType) Pointer() *ConquestAPIConditionType {
	return &m
}

const (

	// ConquestAPIConditionTypeConditionTypeWeightedAverage captures enum value "ConditionType_WeightedAverage"
	ConquestAPIConditionTypeConditionTypeWeightedAverage ConquestAPIConditionType = "ConditionType_WeightedAverage"

	// ConquestAPIConditionTypeConditionTypeConditionDistribution captures enum value "ConditionType_ConditionDistribution"
	ConquestAPIConditionTypeConditionTypeConditionDistribution ConquestAPIConditionType = "ConditionType_ConditionDistribution"
)

// for schema
var conquestApiConditionTypeEnum []interface{}

func init() {
	var res []ConquestAPIConditionType
	if err := json.Unmarshal([]byte(`["ConditionType_WeightedAverage","ConditionType_ConditionDistribution"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiConditionTypeEnum = append(conquestApiConditionTypeEnum, v)
	}
}

func (m ConquestAPIConditionType) validateConquestAPIConditionTypeEnum(path, location string, value ConquestAPIConditionType) error {
	if err := validate.EnumCase(path, location, value, conquestApiConditionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api condition type
func (m ConquestAPIConditionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPIConditionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api condition type based on context it is used
func (m ConquestAPIConditionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
