// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPICostType conquest api cost type
//
// swagger:model conquest_apiCostType
type ConquestAPICostType string

func NewConquestAPICostType(value ConquestAPICostType) *ConquestAPICostType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPICostType.
func (m ConquestAPICostType) Pointer() *ConquestAPICostType {
	return &m
}

const (

	// ConquestAPICostTypeCostTypeOther captures enum value "CostType_Other"
	ConquestAPICostTypeCostTypeOther ConquestAPICostType = "CostType_Other"

	// ConquestAPICostTypeCostTypeActual captures enum value "CostType_Actual"
	ConquestAPICostTypeCostTypeActual ConquestAPICostType = "CostType_Actual"

	// ConquestAPICostTypeCostTypeEstimated captures enum value "CostType_Estimated"
	ConquestAPICostTypeCostTypeEstimated ConquestAPICostType = "CostType_Estimated"
)

// for schema
var conquestApiCostTypeEnum []interface{}

func init() {
	var res []ConquestAPICostType
	if err := json.Unmarshal([]byte(`["CostType_Other","CostType_Actual","CostType_Estimated"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiCostTypeEnum = append(conquestApiCostTypeEnum, v)
	}
}

func (m ConquestAPICostType) validateConquestAPICostTypeEnum(path, location string, value ConquestAPICostType) error {
	if err := validate.EnumCase(path, location, value, conquestApiCostTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api cost type
func (m ConquestAPICostType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPICostTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api cost type based on context it is used
func (m ConquestAPICostType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
