// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPICreateSessionGrantType - authorization_code: code is used for exchanging an authorization code for an access token
// when an application is configured for the 'authorization code flow'
//
// swagger:model conquest_apiCreateSessionGrantType
type ConquestAPICreateSessionGrantType string

func NewConquestAPICreateSessionGrantType(value ConquestAPICreateSessionGrantType) *ConquestAPICreateSessionGrantType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPICreateSessionGrantType.
func (m ConquestAPICreateSessionGrantType) Pointer() *ConquestAPICreateSessionGrantType {
	return &m
}

const (

	// ConquestAPICreateSessionGrantTypeUnknown captures enum value "unknown"
	ConquestAPICreateSessionGrantTypeUnknown ConquestAPICreateSessionGrantType = "unknown"

	// ConquestAPICreateSessionGrantTypeAuthorizationCode captures enum value "authorization_code"
	ConquestAPICreateSessionGrantTypeAuthorizationCode ConquestAPICreateSessionGrantType = "authorization_code"
)

// for schema
var conquestApiCreateSessionGrantTypeEnum []interface{}

func init() {
	var res []ConquestAPICreateSessionGrantType
	if err := json.Unmarshal([]byte(`["unknown","authorization_code"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiCreateSessionGrantTypeEnum = append(conquestApiCreateSessionGrantTypeEnum, v)
	}
}

func (m ConquestAPICreateSessionGrantType) validateConquestAPICreateSessionGrantTypeEnum(path, location string, value ConquestAPICreateSessionGrantType) error {
	if err := validate.EnumCase(path, location, value, conquestApiCreateSessionGrantTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api create session grant type
func (m ConquestAPICreateSessionGrantType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPICreateSessionGrantTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api create session grant type based on context it is used
func (m ConquestAPICreateSessionGrantType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
