// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPIIssueBy conquest api issue by
//
// swagger:model conquest_apiIssueBy
type ConquestAPIIssueBy string

func NewConquestAPIIssueBy(value ConquestAPIIssueBy) *ConquestAPIIssueBy {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPIIssueBy.
func (m ConquestAPIIssueBy) Pointer() *ConquestAPIIssueBy {
	return &m
}

const (

	// ConquestAPIIssueByIssueByPrinter captures enum value "IssueBy_Printer"
	ConquestAPIIssueByIssueByPrinter ConquestAPIIssueBy = "IssueBy_Printer"

	// ConquestAPIIssueByIssueByElectronicMail captures enum value "IssueBy_ElectronicMail"
	ConquestAPIIssueByIssueByElectronicMail ConquestAPIIssueBy = "IssueBy_ElectronicMail"

	// ConquestAPIIssueByIssueByNone captures enum value "IssueBy_None"
	ConquestAPIIssueByIssueByNone ConquestAPIIssueBy = "IssueBy_None"
)

// for schema
var conquestApiIssueByEnum []interface{}

func init() {
	var res []ConquestAPIIssueBy
	if err := json.Unmarshal([]byte(`["IssueBy_Printer","IssueBy_ElectronicMail","IssueBy_None"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiIssueByEnum = append(conquestApiIssueByEnum, v)
	}
}

func (m ConquestAPIIssueBy) validateConquestAPIIssueByEnum(path, location string, value ConquestAPIIssueBy) error {
	if err := validate.EnumCase(path, location, value, conquestApiIssueByEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api issue by
func (m ConquestAPIIssueBy) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPIIssueByEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api issue by based on context it is used
func (m ConquestAPIIssueBy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
