// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConquestAPILegacyDocumentDirectory conquest api legacy document directory
//
// swagger:model conquest_apiLegacyDocumentDirectory
type ConquestAPILegacyDocumentDirectory struct {

	// description
	Description string `json:"description,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// mount
	Mount string `json:"mount,omitempty"`

	// path
	Path string `json:"path,omitempty"`

	// TODO decide whether to still do this.
	// the content of the ${path}.token file that is used to verify that the gateway and child processes
	// are in-fact referring to the same directory
	Token string `json:"token,omitempty"`
}

// Validate validates this conquest api legacy document directory
func (m *ConquestAPILegacyDocumentDirectory) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this conquest api legacy document directory based on context it is used
func (m *ConquestAPILegacyDocumentDirectory) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPILegacyDocumentDirectory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPILegacyDocumentDirectory) UnmarshalBinary(b []byte) error {
	var res ConquestAPILegacyDocumentDirectory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
