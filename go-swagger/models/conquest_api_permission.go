// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPIPermission conquest api permission
//
// swagger:model conquest_apiPermission
type ConquestAPIPermission string

func NewConquestAPIPermission(value ConquestAPIPermission) *ConquestAPIPermission {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPIPermission.
func (m ConquestAPIPermission) Pointer() *ConquestAPIPermission {
	return &m
}

const (

	// ConquestAPIPermissionPermissionNotSet captures enum value "Permission_NotSet"
	ConquestAPIPermissionPermissionNotSet ConquestAPIPermission = "Permission_NotSet"

	// ConquestAPIPermissionPermissionNoAccess captures enum value "Permission_NoAccess"
	ConquestAPIPermissionPermissionNoAccess ConquestAPIPermission = "Permission_NoAccess"

	// ConquestAPIPermissionPermissionReadOnly captures enum value "Permission_ReadOnly"
	ConquestAPIPermissionPermissionReadOnly ConquestAPIPermission = "Permission_ReadOnly"

	// ConquestAPIPermissionPermissionEdit captures enum value "Permission_Edit"
	ConquestAPIPermissionPermissionEdit ConquestAPIPermission = "Permission_Edit"
)

// for schema
var conquestApiPermissionEnum []interface{}

func init() {
	var res []ConquestAPIPermission
	if err := json.Unmarshal([]byte(`["Permission_NotSet","Permission_NoAccess","Permission_ReadOnly","Permission_Edit"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiPermissionEnum = append(conquestApiPermissionEnum, v)
	}
}

func (m ConquestAPIPermission) validateConquestAPIPermissionEnum(path, location string, value ConquestAPIPermission) error {
	if err := validate.EnumCase(path, location, value, conquestApiPermissionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api permission
func (m ConquestAPIPermission) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPIPermissionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api permission based on context it is used
func (m ConquestAPIPermission) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
