// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConquestAPIRecordKey conquest api record key
//
// swagger:model conquest_apiRecordKey
type ConquestAPIRecordKey struct {

	// object key
	ObjectKey *ConquestAPIObjectKey `json:"ObjectKey,omitempty"`

	// object key2
	ObjectKey2 *ConquestAPIObjectKey `json:"ObjectKey2,omitempty"`
}

// Validate validates this conquest api record key
func (m *ConquestAPIRecordKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObjectKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectKey2(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIRecordKey) validateObjectKey(formats strfmt.Registry) error {
	if swag.IsZero(m.ObjectKey) { // not required
		return nil
	}

	if m.ObjectKey != nil {
		if err := m.ObjectKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ObjectKey")
			}
			return err
		}
	}

	return nil
}

func (m *ConquestAPIRecordKey) validateObjectKey2(formats strfmt.Registry) error {
	if swag.IsZero(m.ObjectKey2) { // not required
		return nil
	}

	if m.ObjectKey2 != nil {
		if err := m.ObjectKey2.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey2")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ObjectKey2")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this conquest api record key based on the context it is used
func (m *ConquestAPIRecordKey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateObjectKey(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateObjectKey2(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIRecordKey) contextValidateObjectKey(ctx context.Context, formats strfmt.Registry) error {

	if m.ObjectKey != nil {
		if err := m.ObjectKey.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ObjectKey")
			}
			return err
		}
	}

	return nil
}

func (m *ConquestAPIRecordKey) contextValidateObjectKey2(ctx context.Context, formats strfmt.Registry) error {

	if m.ObjectKey2 != nil {
		if err := m.ObjectKey2.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey2")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ObjectKey2")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIRecordKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIRecordKey) UnmarshalBinary(b []byte) error {
	var res ConquestAPIRecordKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
