// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConquestAPIStandardDefectResponse conquest api standard defect response
//
// swagger:model conquest_apiStandardDefectResponse
type ConquestAPIStandardDefectResponse struct {

	// duration
	Duration int32 `json:"Duration,omitempty"`

	// duration unit
	DurationUnit *ConquestAPICalendarDurationUnit `json:"DurationUnit,omitempty"`

	// hierarchy ID
	HierarchyID int32 `json:"HierarchyID,omitempty"`

	// score
	Score int32 `json:"Score,omitempty"`

	// severity ID
	SeverityID int32 `json:"SeverityID,omitempty"`
}

// Validate validates this conquest api standard defect response
func (m *ConquestAPIStandardDefectResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDurationUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIStandardDefectResponse) validateDurationUnit(formats strfmt.Registry) error {
	if swag.IsZero(m.DurationUnit) { // not required
		return nil
	}

	if m.DurationUnit != nil {
		if err := m.DurationUnit.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DurationUnit")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("DurationUnit")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this conquest api standard defect response based on the context it is used
func (m *ConquestAPIStandardDefectResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDurationUnit(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIStandardDefectResponse) contextValidateDurationUnit(ctx context.Context, formats strfmt.Registry) error {

	if m.DurationUnit != nil {
		if err := m.DurationUnit.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DurationUnit")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("DurationUnit")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIStandardDefectResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIStandardDefectResponse) UnmarshalBinary(b []byte) error {
	var res ConquestAPIStandardDefectResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
