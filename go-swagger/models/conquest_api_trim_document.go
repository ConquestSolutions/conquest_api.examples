// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConquestAPITrimDocument conquest api trim document
//
// swagger:model conquest_apiTrimDocument
type ConquestAPITrimDocument struct {

	// date created
	DateCreated *ConquestAPITimestampValue `json:"DateCreated,omitempty"`

	// doc type
	DocType string `json:"DocType,omitempty"`

	// record number
	RecordNumber string `json:"RecordNumber,omitempty"`

	// record type
	RecordType string `json:"RecordType,omitempty"`

	// title
	Title string `json:"Title,omitempty"`

	// Uri
	URI string `json:"Uri,omitempty"`
}

// Validate validates this conquest api trim document
func (m *ConquestAPITrimDocument) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateCreated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPITrimDocument) validateDateCreated(formats strfmt.Registry) error {
	if swag.IsZero(m.DateCreated) { // not required
		return nil
	}

	if m.DateCreated != nil {
		if err := m.DateCreated.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DateCreated")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("DateCreated")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this conquest api trim document based on the context it is used
func (m *ConquestAPITrimDocument) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDateCreated(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPITrimDocument) contextValidateDateCreated(ctx context.Context, formats strfmt.Registry) error {

	if m.DateCreated != nil {
		if err := m.DateCreated.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DateCreated")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("DateCreated")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPITrimDocument) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPITrimDocument) UnmarshalBinary(b []byte) error {
	var res ConquestAPITrimDocument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
