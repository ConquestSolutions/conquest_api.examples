// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConquestAPIValueType ValueType summaries all the basic data types that all other datatypes/objects/commands
// are build up from.
//
// Each of these data types have two representations in the AnyValue type as follows
//
// If a value is required in an object, then the data type is as is. For a String, the data type is:
//
//   string
//
//   the default value is an empty string ""
//
// If a value is optional in an object, then the data type is a container with a 'value' attribute
// For a String the container type is StringValue, it looks like:
//
//   { value: string }
//
//   the default value is NULL (no container)
//
//  - ValueType_String: string
//  - ValueType_Boolean: bool
//  - ValueType_Number: double
//  - ValueType_Int32: int32 aka. int
//  - ValueType_Int64: int64 aka. long, bigint
//  - ValueType_Decimal: decimal aka. money/currency, fixed-precision
//  - ValueType_Date: Timestamp
//  - ValueType_DateTime: Timestamp
//  - ValueType_Duration: int64 milliseconds, use this to encode TimeStans
//  - ValueType_Code: Code (int32) is an item in a user definable list.
//  - ValueType_Hierarchy: Hierarchy (ObjectKey) is an item in a hierarchy such as an Asset tree, the Asset Priority hierarchy lists and Action Categories.
//  - ValueType_ObjectKey: ObjectKey is an item with an ID and a type such as an Asset, AssetType, View, Document and DocumentContainer (eg. folder). See ObjectTypes.
//  - ValueType_Enumeration: Enumeration (int32) is fixed size ordered list of values. Enumerations have specific business rules attached.
//  - ValueType_GeographyData: ValueType_StringList = 14;
//  - ValueType_GeometryData: ValueType_Uri = 16;
//    ValueType_Uuid = 17;
//
// swagger:model conquest_apiValueType
type ConquestAPIValueType string

func NewConquestAPIValueType(value ConquestAPIValueType) *ConquestAPIValueType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ConquestAPIValueType.
func (m ConquestAPIValueType) Pointer() *ConquestAPIValueType {
	return &m
}

const (

	// ConquestAPIValueTypeValueTypeUnknown captures enum value "ValueType_Unknown"
	ConquestAPIValueTypeValueTypeUnknown ConquestAPIValueType = "ValueType_Unknown"

	// ConquestAPIValueTypeValueTypeString captures enum value "ValueType_String"
	ConquestAPIValueTypeValueTypeString ConquestAPIValueType = "ValueType_String"

	// ConquestAPIValueTypeValueTypeBoolean captures enum value "ValueType_Boolean"
	ConquestAPIValueTypeValueTypeBoolean ConquestAPIValueType = "ValueType_Boolean"

	// ConquestAPIValueTypeValueTypeNumber captures enum value "ValueType_Number"
	ConquestAPIValueTypeValueTypeNumber ConquestAPIValueType = "ValueType_Number"

	// ConquestAPIValueTypeValueTypeInt32 captures enum value "ValueType_Int32"
	ConquestAPIValueTypeValueTypeInt32 ConquestAPIValueType = "ValueType_Int32"

	// ConquestAPIValueTypeValueTypeInt64 captures enum value "ValueType_Int64"
	ConquestAPIValueTypeValueTypeInt64 ConquestAPIValueType = "ValueType_Int64"

	// ConquestAPIValueTypeValueTypeDecimal captures enum value "ValueType_Decimal"
	ConquestAPIValueTypeValueTypeDecimal ConquestAPIValueType = "ValueType_Decimal"

	// ConquestAPIValueTypeValueTypeDate captures enum value "ValueType_Date"
	ConquestAPIValueTypeValueTypeDate ConquestAPIValueType = "ValueType_Date"

	// ConquestAPIValueTypeValueTypeDateTime captures enum value "ValueType_DateTime"
	ConquestAPIValueTypeValueTypeDateTime ConquestAPIValueType = "ValueType_DateTime"

	// ConquestAPIValueTypeValueTypeDuration captures enum value "ValueType_Duration"
	ConquestAPIValueTypeValueTypeDuration ConquestAPIValueType = "ValueType_Duration"

	// ConquestAPIValueTypeValueTypeCode captures enum value "ValueType_Code"
	ConquestAPIValueTypeValueTypeCode ConquestAPIValueType = "ValueType_Code"

	// ConquestAPIValueTypeValueTypeHierarchy captures enum value "ValueType_Hierarchy"
	ConquestAPIValueTypeValueTypeHierarchy ConquestAPIValueType = "ValueType_Hierarchy"

	// ConquestAPIValueTypeValueTypeObjectKey captures enum value "ValueType_ObjectKey"
	ConquestAPIValueTypeValueTypeObjectKey ConquestAPIValueType = "ValueType_ObjectKey"

	// ConquestAPIValueTypeValueTypeEnumeration captures enum value "ValueType_Enumeration"
	ConquestAPIValueTypeValueTypeEnumeration ConquestAPIValueType = "ValueType_Enumeration"

	// ConquestAPIValueTypeValueTypeGeographyData captures enum value "ValueType_GeographyData"
	ConquestAPIValueTypeValueTypeGeographyData ConquestAPIValueType = "ValueType_GeographyData"

	// ConquestAPIValueTypeValueTypeGeometryData captures enum value "ValueType_GeometryData"
	ConquestAPIValueTypeValueTypeGeometryData ConquestAPIValueType = "ValueType_GeometryData"

	// ConquestAPIValueTypeValueTypeStyle captures enum value "ValueType_Style"
	ConquestAPIValueTypeValueTypeStyle ConquestAPIValueType = "ValueType_Style"
)

// for schema
var conquestApiValueTypeEnum []interface{}

func init() {
	var res []ConquestAPIValueType
	if err := json.Unmarshal([]byte(`["ValueType_Unknown","ValueType_String","ValueType_Boolean","ValueType_Number","ValueType_Int32","ValueType_Int64","ValueType_Decimal","ValueType_Date","ValueType_DateTime","ValueType_Duration","ValueType_Code","ValueType_Hierarchy","ValueType_ObjectKey","ValueType_Enumeration","ValueType_GeographyData","ValueType_GeometryData","ValueType_Style"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conquestApiValueTypeEnum = append(conquestApiValueTypeEnum, v)
	}
}

func (m ConquestAPIValueType) validateConquestAPIValueTypeEnum(path, location string, value ConquestAPIValueType) error {
	if err := validate.EnumCase(path, location, value, conquestApiValueTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this conquest api value type
func (m ConquestAPIValueType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConquestAPIValueTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this conquest api value type based on context it is used
func (m ConquestAPIValueType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
